"""Resolving nullable columns in characters table

Revision ID: 33d4799aeb40
Revises: 7dc704b8d73d
Create Date: 2024-12-01 23:37:08.650883+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '33d4799aeb40'
down_revision: Union[str, None] = '7dc704b8d73d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('characters', 'stats',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('characters', 'chosen_class_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('characters', 'chosen_race_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('characters', 'chosen_race_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('characters', 'chosen_class_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('characters', 'stats',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    # ### end Alembic commands ###
